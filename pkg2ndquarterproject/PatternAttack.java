/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg2ndquarterproject;
import java.util.Random;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;

/**
 *
 * @author Asus
 */
public class PatternAttack extends javax.swing.JFrame {
    int delay = 5000;
    int[][] colors = {{245,211,28},{255,0,0},{0,176,80},{0,176,240},{255,255,255},{237,125,49},{112,48,160},{250,126,232},{128,128,128},{0,0,0}};
    int[] btnCheck = new int[9];
    int[] ctrChecker = {0,100,100,100,100,100,100,100,100,100};
    int colorCounter = 3;
    int selected = 0;
    int ctr1 = 1,ctr2 = 1,ctr3 = 1,ctr4 = 1,ctr5 = 1,ctr6 = 1,ctr7 = 1,ctr8 = 1,ctr9 = 1;
    int score = 0;
    int wrongColor = 0;
    int playAgain = 0;
    
    
    public PatternAttack() {
        initComponents();
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2 - getWidth()/2, size.height/2 - getHeight()/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        framePanel = new javax.swing.JPanel();
        titlePanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        btn1 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        startBTN = new javax.swing.JButton();
        scorePanel = new javax.swing.JLabel();
        scoreTF = new javax.swing.JTextField();
        checkBTN = new javax.swing.JButton();
        redBTN = new javax.swing.JButton();
        whiteBTN = new javax.swing.JButton();
        pinkBTN = new javax.swing.JButton();
        greenBTN = new javax.swing.JButton();
        orangeBTN = new javax.swing.JButton();
        greyBTN = new javax.swing.JButton();
        blueBTN = new javax.swing.JButton();
        blackBTN = new javax.swing.JButton();
        violetBTN = new javax.swing.JButton();
        clearBTN = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        homeBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        framePanel.setBackground(new java.awt.Color(42, 42, 52));

        titlePanel.setBackground(new java.awt.Color(27, 28, 33));
        titlePanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        titleLabel.setFont(new java.awt.Font("Source Sans Pro Black", 1, 36)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(245, 211, 28));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("PATTERN ATTACK");

        javax.swing.GroupLayout titlePanelLayout = new javax.swing.GroupLayout(titlePanel);
        titlePanel.setLayout(titlePanelLayout);
        titlePanelLayout.setHorizontalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        titlePanelLayout.setVerticalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
        );

        btn1.setBackground(new java.awt.Color(245, 211, 28));
        btn1.setFont(new java.awt.Font("Source Sans Pro Black", 1, 24)); // NOI18N
        btn1.setToolTipText("");
        btn1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn1.setFocusPainted(false);
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn3.setBackground(new java.awt.Color(245, 211, 28));
        btn3.setFont(new java.awt.Font("Source Sans Pro Black", 1, 24)); // NOI18N
        btn3.setToolTipText("");
        btn3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn3.setFocusPainted(false);
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn2.setBackground(new java.awt.Color(245, 211, 28));
        btn2.setFont(new java.awt.Font("Source Sans Pro Black", 1, 24)); // NOI18N
        btn2.setToolTipText("");
        btn2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn2.setFocusPainted(false);
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn4.setBackground(new java.awt.Color(245, 211, 28));
        btn4.setFont(new java.awt.Font("Source Sans Pro Black", 1, 24)); // NOI18N
        btn4.setToolTipText("");
        btn4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn4.setFocusPainted(false);
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn6.setBackground(new java.awt.Color(245, 211, 28));
        btn6.setFont(new java.awt.Font("Source Sans Pro Black", 1, 24)); // NOI18N
        btn6.setToolTipText("");
        btn6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn6.setFocusPainted(false);
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btn5.setBackground(new java.awt.Color(245, 211, 28));
        btn5.setFont(new java.awt.Font("Source Sans Pro Black", 1, 24)); // NOI18N
        btn5.setToolTipText("");
        btn5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn5.setFocusPainted(false);
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        startBTN.setBackground(new java.awt.Color(245, 211, 28));
        startBTN.setFont(new java.awt.Font("Source Sans Pro Black", 1, 18)); // NOI18N
        startBTN.setText("START");
        startBTN.setToolTipText("");
        startBTN.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        startBTN.setFocusPainted(false);
        startBTN.setPreferredSize(new java.awt.Dimension(79, 35));
        startBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBTNActionPerformed(evt);
            }
        });

        scorePanel.setFont(new java.awt.Font("Source Sans Pro Black", 1, 18)); // NOI18N
        scorePanel.setForeground(new java.awt.Color(245, 211, 28));
        scorePanel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scorePanel.setText("SCORE:");

        scoreTF.setEditable(false);
        scoreTF.setBackground(new java.awt.Color(27, 28, 33));
        scoreTF.setFont(new java.awt.Font("Source Sans Pro", 1, 18)); // NOI18N
        scoreTF.setForeground(new java.awt.Color(245, 211, 28));
        scoreTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        scoreTF.setText("0");
        scoreTF.setBorder(null);
        scoreTF.setPreferredSize(new java.awt.Dimension(79, 32));
        scoreTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scoreTFActionPerformed(evt);
            }
        });

        checkBTN.setBackground(new java.awt.Color(245, 211, 28));
        checkBTN.setFont(new java.awt.Font("Source Sans Pro Black", 1, 18)); // NOI18N
        checkBTN.setText("CHECK");
        checkBTN.setToolTipText("");
        checkBTN.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        checkBTN.setFocusPainted(false);
        checkBTN.setPreferredSize(new java.awt.Dimension(79, 35));
        checkBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBTNActionPerformed(evt);
            }
        });

        redBTN.setBackground(new java.awt.Color(255, 0, 0));
        redBTN.setFont(new java.awt.Font("Source Sans Pro Black", 1, 18)); // NOI18N
        redBTN.setText("RED");
        redBTN.setToolTipText("");
        redBTN.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        redBTN.setFocusPainted(false);
        redBTN.setPreferredSize(new java.awt.Dimension(62, 25));
        redBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redBTNActionPerformed(evt);
            }
        });

        whiteBTN.setBackground(new java.awt.Color(255, 255, 255));
        whiteBTN.setFont(new java.awt.Font("Source Sans Pro Black", 1, 18)); // NOI18N
        whiteBTN.setText("WHITE");
        whiteBTN.setToolTipText("");
        whiteBTN.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        whiteBTN.setFocusPainted(false);
        whiteBTN.setPreferredSize(new java.awt.Dimension(66, 25));
        whiteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                whiteBTNActionPerformed(evt);
            }
        });

        pinkBTN.setBackground(new java.awt.Color(250, 126, 232));
        pinkBTN.setFont(new java.awt.Font("Source Sans Pro Black", 1, 18)); // NOI18N
        pinkBTN.setText("PINK");
        pinkBTN.setToolTipText("");
        pinkBTN.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        pinkBTN.setFocusPainted(false);
        pinkBTN.setPreferredSize(new java.awt.Dimension(75, 21));
        pinkBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pinkBTNActionPerformed(evt);
            }
        });

        greenBTN.setBackground(new java.awt.Color(0, 176, 80));
        greenBTN.setFont(new java.awt.Font("Source Sans Pro Black", 1, 18)); // NOI18N
        greenBTN.setText("GREEN");
        greenBTN.setToolTipText("");
        greenBTN.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        greenBTN.setFocusPainted(false);
        greenBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                greenBTNActionPerformed(evt);
            }
        });

        orangeBTN.setBackground(new java.awt.Color(237, 125, 49));
        orangeBTN.setFont(new java.awt.Font("Source Sans Pro Black", 1, 17)); // NOI18N
        orangeBTN.setText("ORANGE");
        orangeBTN.setToolTipText("");
        orangeBTN.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        orangeBTN.setFocusPainted(false);
        orangeBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orangeBTNActionPerformed(evt);
            }
        });

        greyBTN.setBackground(new java.awt.Color(128, 128, 128));
        greyBTN.setFont(new java.awt.Font("Source Sans Pro Black", 1, 18)); // NOI18N
        greyBTN.setText("GREY");
        greyBTN.setToolTipText("");
        greyBTN.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        greyBTN.setFocusPainted(false);
        greyBTN.setPreferredSize(new java.awt.Dimension(75, 21));
        greyBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                greyBTNActionPerformed(evt);
            }
        });

        blueBTN.setBackground(new java.awt.Color(0, 176, 240));
        blueBTN.setFont(new java.awt.Font("Source Sans Pro Black", 1, 18)); // NOI18N
        blueBTN.setText("BLUE");
        blueBTN.setToolTipText("");
        blueBTN.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        blueBTN.setFocusPainted(false);
        blueBTN.setPreferredSize(new java.awt.Dimension(75, 21));
        blueBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blueBTNActionPerformed(evt);
            }
        });

        blackBTN.setBackground(new java.awt.Color(0, 0, 0));
        blackBTN.setFont(new java.awt.Font("Source Sans Pro Black", 1, 18)); // NOI18N
        blackBTN.setForeground(new java.awt.Color(255, 255, 255));
        blackBTN.setText("BLACK");
        blackBTN.setToolTipText("");
        blackBTN.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        blackBTN.setFocusPainted(false);
        blackBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blackBTNActionPerformed(evt);
            }
        });

        violetBTN.setBackground(new java.awt.Color(112, 48, 160));
        violetBTN.setFont(new java.awt.Font("Source Sans Pro Black", 1, 18)); // NOI18N
        violetBTN.setText("VIOLET");
        violetBTN.setToolTipText("");
        violetBTN.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        violetBTN.setFocusPainted(false);
        violetBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                violetBTNActionPerformed(evt);
            }
        });

        clearBTN.setBackground(new java.awt.Color(245, 211, 28));
        clearBTN.setFont(new java.awt.Font("Source Sans Pro Black", 1, 18)); // NOI18N
        clearBTN.setText("CLEAR");
        clearBTN.setToolTipText("");
        clearBTN.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        clearBTN.setFocusPainted(false);
        clearBTN.setPreferredSize(new java.awt.Dimension(79, 35));
        clearBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBTNActionPerformed(evt);
            }
        });

        btn7.setBackground(new java.awt.Color(245, 211, 28));
        btn7.setFont(new java.awt.Font("Source Sans Pro Black", 1, 24)); // NOI18N
        btn7.setToolTipText("");
        btn7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn7.setFocusPainted(false);
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        btn8.setBackground(new java.awt.Color(245, 211, 28));
        btn8.setFont(new java.awt.Font("Source Sans Pro Black", 1, 24)); // NOI18N
        btn8.setToolTipText("");
        btn8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn8.setFocusPainted(false);
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn9.setBackground(new java.awt.Color(245, 211, 28));
        btn9.setFont(new java.awt.Font("Source Sans Pro Black", 1, 24)); // NOI18N
        btn9.setToolTipText("");
        btn9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn9.setFocusPainted(false);
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        homeBTN.setBackground(new java.awt.Color(245, 211, 28));
        homeBTN.setFont(new java.awt.Font("Source Sans Pro Black", 1, 18)); // NOI18N
        homeBTN.setText("HOME");
        homeBTN.setToolTipText("");
        homeBTN.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        homeBTN.setFocusPainted(false);
        homeBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout framePanelLayout = new javax.swing.GroupLayout(framePanel);
        framePanel.setLayout(framePanelLayout);
        framePanelLayout.setHorizontalGroup(
            framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(framePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(framePanelLayout.createSequentialGroup()
                        .addComponent(titlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, framePanelLayout.createSequentialGroup()
                        .addGroup(framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(checkBTN, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(clearBTN, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(startBTN, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(homeBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(framePanelLayout.createSequentialGroup()
                                .addGroup(framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(framePanelLayout.createSequentialGroup()
                                        .addGap(97, 97, 97)
                                        .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(orangeBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(greyBTN, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                    .addComponent(greenBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(framePanelLayout.createSequentialGroup()
                                .addGroup(framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(framePanelLayout.createSequentialGroup()
                                        .addGap(97, 97, 97)
                                        .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(blueBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(blackBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(violetBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(10, 10, 10))
                    .addGroup(framePanelLayout.createSequentialGroup()
                        .addGroup(framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(framePanelLayout.createSequentialGroup()
                                .addComponent(scoreTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11))
                            .addGroup(framePanelLayout.createSequentialGroup()
                                .addComponent(scorePanel)
                                .addGap(18, 18, 18)))
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pinkBTN, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(whiteBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(redBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        framePanelLayout.setVerticalGroup(
            framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(framePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(framePanelLayout.createSequentialGroup()
                        .addComponent(redBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(whiteBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pinkBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, framePanelLayout.createSequentialGroup()
                            .addComponent(scorePanel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(scoreTF, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(btn2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, framePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(startBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(checkBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(framePanelLayout.createSequentialGroup()
                        .addGroup(framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(framePanelLayout.createSequentialGroup()
                                .addComponent(greenBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(orangeBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(greyBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(framePanelLayout.createSequentialGroup()
                        .addComponent(blueBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(violetBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(blackBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(framePanelLayout.createSequentialGroup()
                        .addComponent(clearBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(homeBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(framePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(framePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        if(selected != 0){
            ctr1 = selected;
        }
        ctrChecker[1] = ctr1;
        btn1.setBackground(new Color(colors[ctr1][0], colors[ctr1][1], colors[ctr1][2]));
        ctr1++;
        if(ctr1 == colorCounter + 1){
            ctr1=0;
        }
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        if(selected != 0){
            ctr3 = selected;
        }
        ctrChecker[3] = ctr3;
        btn3.setBackground(new Color(colors[ctr3][0], colors[ctr3][1], colors[ctr3][2]));
        ctr3++;
        if(ctr3 == colorCounter + 1){
            ctr3=0;
        }
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        if(selected != 0){
            ctr2 = selected;
        }
        ctrChecker[2] = ctr2;
        btn2.setBackground(new Color(colors[ctr2][0], colors[ctr2][1], colors[ctr2][2]));
        ctr2++;
        if(ctr2 == colorCounter + 1){
            ctr2=0;
        }
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        if(selected != 0){
            ctr4 = selected;
        }
        ctrChecker[4] = ctr4;
        btn4.setBackground(new Color(colors[ctr4][0], colors[ctr4][1], colors[ctr4][2]));
        ctr4++;
        if(ctr4 == colorCounter + 1){
            ctr4=0;
        }
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        if(selected != 0){
            ctr6 = selected;
        }
        ctrChecker[6] = ctr6;
        btn6.setBackground(new Color(colors[ctr6][0], colors[ctr6][1], colors[ctr6][2]));
        ctr6++;
        if(ctr6 == colorCounter + 1){
            ctr6=0;
        }
    }//GEN-LAST:event_btn6ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        if(selected != 0){
            ctr5 = selected;
        }
        ctrChecker[5] = ctr5;
        btn5.setBackground(new Color(colors[ctr5][0], colors[ctr5][1], colors[ctr5][2]));
        ctr5++;
        if(ctr5 == colorCounter + 1){
            ctr5=0;
        }
    }//GEN-LAST:event_btn5ActionPerformed

    private void startBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBTNActionPerformed
        startBTN.setVisible(false);
        titleLabel.setText("5 SECONDS TO MEMORIZE");
        JButton [] buttons = {btn1,btn2,btn3,btn4,btn5,btn6,btn7,btn8,btn9};
        for(int i=1;i<=9;i++){
            ctrChecker[i] = 100;
        }
        for(int i=0;i<9;i++){
            btnCheck[i] = 0;
        }
        for(int i=0;i<9;i++){
                buttons[i].setBackground(new Color(colors[0][0], colors[0][1], colors[0][2]));
                buttons[i].setEnabled(false);
        }
        ctr1 = 1;
        ctr2 = 1;
        ctr3 = 1;
        ctr4 = 1;
        ctr5 = 1;
        ctr6 = 1;
        ctr7 = 1;
        ctr8 = 1;
        ctr9 = 1;
        Random random = new Random();
        int randomNum;
        if(playAgain == 1){
            for(int i=0;i<9;i++){
                buttons[i].setBackground(new Color(colors[0][0], colors[0][1], colors[0][2]));
                buttons[i].setBorder(new EmptyBorder(1,1,1,1));
                startBTN.setText("START");
                startBTN.setVisible(false);
                checkBTN.setText("CHECK");
                checkBTN.setVisible(false);
                clearBTN.setVisible(false);
                score = 0;
                wrongColor = 0;
                playAgain = 0;
                scoreTF.setText(String.valueOf(score));
            }
        }
        if(score%50==0 && score != 0){
            if(colorCounter<=9){
                colorCounter++;
                switch (colorCounter) {
                    case 4:
                        whiteBTN.setEnabled(true);
                        break;
                    case 5:
                        orangeBTN.setEnabled(true);
                        break;
                    case 6:
                        violetBTN.setEnabled(true);
                        break;
                    case 7:
                        pinkBTN.setEnabled(true);
                        break;
                    case 8:
                        greyBTN.setEnabled(true);
                        break;
                    case 9:
                        blackBTN.setEnabled(true);
                        break;
                    default:
                        break;
                }
            }
        }
        for(int i=0;i<9;i++){
            randomNum = random.nextInt(colorCounter)+1;
            btnCheck[i] = randomNum;
            buttons[i].setBackground(new Color(colors[randomNum][0], colors[randomNum][1], colors[randomNum][2]));
        }
        Timer timer = new Timer( delay, new ActionListener(){
          @Override
          public void actionPerformed( ActionEvent e ){
                for(int i=0;i<9;i++){
                    buttons[i].setBackground(new Color(colors[0][0], colors[0][1], colors[0][2]));
                    buttons[i].setEnabled(true);
                }
                titleLabel.setText("FOLLOW THE PATTERN");
                checkBTN.setVisible(true);
                clearBTN.setVisible(true);
          }
        } );
        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_startBTNActionPerformed

    private void checkBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBTNActionPerformed
        int checker = 0;
        JButton [] buttons = {btn1,btn2,btn3,btn4,btn5,btn6,btn7,btn8,btn9};
        if(wrongColor == 0){
            for(int i=0;i<9;i++){
                if(btnCheck[i] == ctrChecker[i+1]){
                    checker++;
                }
                else{
                    buttons[i].setBorder(new LineBorder(Color.YELLOW, 3));
                }
            }
            if(checker == 9){
                titleLabel.setText("CORRECT!");
                score +=10;
                scoreTF.setText(String.valueOf(score));
                startBTN.setText("NEXT");
                startBTN.setVisible(true);
                checkBTN.setVisible(false);
            }
            else{
                wrongColor = 1;
                playAgain = 1;
                startBTN.setVisible(true);
                startBTN.setText("AGAIN");
                titleLabel.setText("WRONG!");
                checkBTN.setText("SEE");
                new GameOver().setVisible(true);
            }
        }
        else{
            for(int i=0;i<9;i++){
                if(btnCheck[i] != ctrChecker[i+1]){
                    buttons[i].setBackground(new Color(colors[btnCheck[i]][0], colors[btnCheck[i]][1], colors[btnCheck[i]][2]));
                }
            }
        }
        
    }//GEN-LAST:event_checkBTNActionPerformed

    private void redBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redBTNActionPerformed
        if(selected != 1){
            selected = 1;
            redBTN.setBorder(new LineBorder(Color.WHITE, 2));
            greenBTN.setBorder(new EmptyBorder(1,1,1,1));
            blueBTN.setBorder(new EmptyBorder(1,1,1,1));
            whiteBTN.setBorder(new EmptyBorder(1,1,1,1));
            orangeBTN.setBorder(new EmptyBorder(1,1,1,1));
            violetBTN.setBorder(new EmptyBorder(1,1,1,1));
            pinkBTN.setBorder(new EmptyBorder(1,1,1,1));
            greyBTN.setBorder(new EmptyBorder(1,1,1,1));
            blackBTN.setBorder(new EmptyBorder(1,1,1,1));
        }
        else if(selected == 1){
            selected=0;
            redBTN.setBorder(new EmptyBorder(1,1,1,1));
        }
    }//GEN-LAST:event_redBTNActionPerformed

    private void whiteBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_whiteBTNActionPerformed
        if(selected != 4){
        selected = 4;
            redBTN.setBorder(new EmptyBorder(1,1,1,1));
            greenBTN.setBorder(new EmptyBorder(1,1,1,1));
            blueBTN.setBorder(new EmptyBorder(1,1,1,1));
            whiteBTN.setBorder(new LineBorder(Color.RED, 1));
            orangeBTN.setBorder(new EmptyBorder(1,1,1,1));
            violetBTN.setBorder(new EmptyBorder(1,1,1,1));
            pinkBTN.setBorder(new EmptyBorder(1,1,1,1));
            greyBTN.setBorder(new EmptyBorder(1,1,1,1));
            blackBTN.setBorder(new EmptyBorder(1,1,1,1));
        }
        else if(selected == 4){
            selected=0;
            whiteBTN.setBorder(new EmptyBorder(1,1,1,1));
        }
    }//GEN-LAST:event_whiteBTNActionPerformed

    private void pinkBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pinkBTNActionPerformed
        if(selected != 7){
            selected = 7;
            redBTN.setBorder(new EmptyBorder(1,1,1,1));
            greenBTN.setBorder(new EmptyBorder(1,1,1,1));
            blueBTN.setBorder(new EmptyBorder(1,1,1,1));
            whiteBTN.setBorder(new EmptyBorder(1,1,1,1));
            orangeBTN.setBorder(new EmptyBorder(1,1,1,1));
            violetBTN.setBorder(new EmptyBorder(1,1,1,1));
            pinkBTN.setBorder(new LineBorder(Color.WHITE, 2));
            greyBTN.setBorder(new EmptyBorder(1,1,1,1));
            blackBTN.setBorder(new EmptyBorder(1,1,1,1));
        }
        else if(selected == 7){
            selected=0;
            pinkBTN.setBorder(new EmptyBorder(1,1,1,1));
        }
    }//GEN-LAST:event_pinkBTNActionPerformed

    private void greenBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_greenBTNActionPerformed
        if(selected != 2){
            selected = 2;
            redBTN.setBorder(new EmptyBorder(1,1,1,1));
            greenBTN.setBorder(new LineBorder(Color.WHITE, 2));
            blueBTN.setBorder(new EmptyBorder(1,1,1,1));
            whiteBTN.setBorder(new EmptyBorder(1,1,1,1));
            orangeBTN.setBorder(new EmptyBorder(1,1,1,1));
            violetBTN.setBorder(new EmptyBorder(1,1,1,1));
            pinkBTN.setBorder(new EmptyBorder(1,1,1,1));
            greyBTN.setBorder(new EmptyBorder(1,1,1,1));
            blackBTN.setBorder(new EmptyBorder(1,1,1,1));
        }
        else if(selected == 2){
            selected=0;
            greenBTN.setBorder(new EmptyBorder(1,1,1,1));
        }
    }//GEN-LAST:event_greenBTNActionPerformed

    private void orangeBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orangeBTNActionPerformed
        if(selected != 5){
            selected = 5;
            redBTN.setBorder(new EmptyBorder(1,1,1,1));
            greenBTN.setBorder(new EmptyBorder(1,1,1,1));
            blueBTN.setBorder(new EmptyBorder(1,1,1,1));
            whiteBTN.setBorder(new EmptyBorder(1,1,1,1));
            orangeBTN.setBorder(new LineBorder(Color.WHITE, 2));
            violetBTN.setBorder(new EmptyBorder(1,1,1,1));
            pinkBTN.setBorder(new EmptyBorder(1,1,1,1));
            greyBTN.setBorder(new EmptyBorder(1,1,1,1));
            blackBTN.setBorder(new EmptyBorder(1,1,1,1));
        }
        else if(selected == 5){
            selected=0;
            orangeBTN.setBorder(new EmptyBorder(1,1,1,1));
        }
    }//GEN-LAST:event_orangeBTNActionPerformed

    private void greyBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_greyBTNActionPerformed
        if(selected != 8){
            selected = 8;
            redBTN.setBorder(new EmptyBorder(1,1,1,1));
            greenBTN.setBorder(new EmptyBorder(1,1,1,1));
            blueBTN.setBorder(new EmptyBorder(1,1,1,1));
            whiteBTN.setBorder(new EmptyBorder(1,1,1,1));
            orangeBTN.setBorder(new EmptyBorder(1,1,1,1));
            violetBTN.setBorder(new EmptyBorder(1,1,1,1));
            pinkBTN.setBorder(new EmptyBorder(1,1,1,1));
            greyBTN.setBorder(new LineBorder(Color.WHITE, 2));
            blackBTN.setBorder(new EmptyBorder(1,1,1,1));
        }
        else if(selected == 8){
            selected=0;
            greyBTN.setBorder(new EmptyBorder(1,1,1,1));
        }
    }//GEN-LAST:event_greyBTNActionPerformed

    private void blueBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blueBTNActionPerformed
        if(selected != 3){
            selected = 3;
            redBTN.setBorder(new EmptyBorder(1,1,1,1));
            greenBTN.setBorder(new EmptyBorder(1,1,1,1));
            blueBTN.setBorder(new LineBorder(Color.WHITE, 2));
            whiteBTN.setBorder(new EmptyBorder(1,1,1,1));
            orangeBTN.setBorder(new EmptyBorder(1,1,1,1));
            violetBTN.setBorder(new EmptyBorder(1,1,1,1));
            pinkBTN.setBorder(new EmptyBorder(1,1,1,1));
            greyBTN.setBorder(new EmptyBorder(1,1,1,1));
            blackBTN.setBorder(new EmptyBorder(1,1,1,1));
        }
        else if(selected == 3){
            selected=0;
            blueBTN.setBorder(new EmptyBorder(1,1,1,1));
        }
    }//GEN-LAST:event_blueBTNActionPerformed

    private void blackBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blackBTNActionPerformed
        if(selected != 9){
            selected = 9;
            redBTN.setBorder(new EmptyBorder(1,1,1,1));
            greenBTN.setBorder(new EmptyBorder(1,1,1,1));
            blueBTN.setBorder(new EmptyBorder(1,1,1,1));
            whiteBTN.setBorder(new EmptyBorder(1,1,1,1));
            orangeBTN.setBorder(new EmptyBorder(1,1,1,1));
            violetBTN.setBorder(new EmptyBorder(1,1,1,1));
            pinkBTN.setBorder(new EmptyBorder(1,1,1,1));
            greyBTN.setBorder(new EmptyBorder(1,1,1,1));
            blackBTN.setBorder(new LineBorder(Color.WHITE, 2));
        }
        else if(selected == 9){
            selected=0;
            blackBTN.setBorder(new EmptyBorder(1,1,1,1));
        }
    }//GEN-LAST:event_blackBTNActionPerformed

    private void violetBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_violetBTNActionPerformed
        if(selected != 6){
            selected = 6;
            redBTN.setBorder(new EmptyBorder(1,1,1,1));
            greenBTN.setBorder(new EmptyBorder(1,1,1,1));
            blueBTN.setBorder(new EmptyBorder(1,1,1,1));
            whiteBTN.setBorder(new EmptyBorder(1,1,1,1));
            orangeBTN.setBorder(new EmptyBorder(1,1,1,1));
            violetBTN.setBorder(new LineBorder(Color.WHITE, 2));
            pinkBTN.setBorder(new EmptyBorder(1,1,1,1));
            greyBTN.setBorder(new EmptyBorder(1,1,1,1));
            blackBTN.setBorder(new EmptyBorder(1,1,1,1));
        }
        else if(selected == 6){
            selected=0;
            violetBTN.setBorder(new EmptyBorder(1,1,1,1));
        }
    }//GEN-LAST:event_violetBTNActionPerformed

    private void clearBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBTNActionPerformed
        JButton [] buttons = {btn1,btn2,btn3,btn4,btn5,btn6,btn7,btn8,btn9};
        for(int i=0;i<9;i++){
            buttons[i].setBackground(new Color(colors[0][0], colors[0][1], colors[0][2]));
        }
        for(int i=1;i<=9;i++){
            ctrChecker[i] = 100;
        }
        ctr1 = 1;
        ctr2 = 1;
        ctr3 = 1;
        ctr4 = 1;
        ctr5 = 1;
        ctr6 = 1;
        ctr7 = 1;
        ctr8 = 1;
        ctr9 = 1;
    }//GEN-LAST:event_clearBTNActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        if(selected != 0){
            ctr7 = selected;
        }
        ctrChecker[7] = ctr7;
        btn7.setBackground(new Color(colors[ctr7][0], colors[ctr7][1], colors[ctr7][2]));
        ctr7++;
        if(ctr7 == colorCounter + 1){
            ctr7=0;
        }
    }//GEN-LAST:event_btn7ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
        if(selected != 0){
            ctr8 = selected;
        }
        ctrChecker[8] = ctr8;
        btn8.setBackground(new Color(colors[ctr8][0], colors[ctr8][1], colors[ctr8][2]));
        ctr8++;
        if(ctr8 == colorCounter + 1){
            ctr8=0;
        }
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        if(selected != 0){
            ctr9 = selected;
        }
        ctrChecker[9] = ctr9;
        btn9.setBackground(new Color(colors[ctr9][0], colors[ctr9][1], colors[ctr9][2]));
        ctr9++;
        if(ctr9 == colorCounter + 1){
            ctr9=0;
        }
    }//GEN-LAST:event_btn9ActionPerformed

    private void homeBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBTNActionPerformed
        new PatternHomeScreen().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_homeBTNActionPerformed

    private void scoreTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scoreTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_scoreTFActionPerformed
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            new PatternAttack().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton blackBTN;
    public static javax.swing.JButton blueBTN;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    public static javax.swing.JButton checkBTN;
    public static javax.swing.JButton clearBTN;
    private javax.swing.JPanel framePanel;
    public static javax.swing.JButton greenBTN;
    public static javax.swing.JButton greyBTN;
    public static javax.swing.JButton homeBTN;
    public static javax.swing.JButton orangeBTN;
    public static javax.swing.JButton pinkBTN;
    public static javax.swing.JButton redBTN;
    private javax.swing.JLabel scorePanel;
    public static javax.swing.JTextField scoreTF;
    public static javax.swing.JButton startBTN;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JPanel titlePanel;
    public static javax.swing.JButton violetBTN;
    public static javax.swing.JButton whiteBTN;
    // End of variables declaration//GEN-END:variables
}
